{"version":3,"sources":["components/Search.jsx"],"names":["Search","appDispatch","useContext","DispatchContext","useImmer","searchTerm","results","show","requestCount","state","setState","searchKeyPressHandler","e","keyCode","type","useEffect","document","addEventListener","removeEventListener","trim","draft","delay","setTimeout","clearTimeout","ourRequest","axios","CancelToken","source","a","post","cancelToken","token","response","data","console","log","fetchResults","cancel","className","htmlFor","width","height","fill","onChange","value","target","autoFocus","autoComplete","id","placeholder","onClick","Boolean","length","map","_id"],"mappings":"+NAoJeA,UA7IA,WACb,IAAMC,EAAcC,qBAAWC,KADZ,EAGOC,YAAS,CACjCC,WAAY,GACZC,QAAS,GACTC,KAAM,UACNC,aAAc,IAPG,mBAGZC,EAHY,KAGLC,EAHK,KA4DnB,SAASC,EAAsBC,GACX,KAAdA,EAAEC,SACJZ,EAAY,CAAEa,KAAM,gBAWxB,OA/DAC,qBAAU,WAER,OADAC,SAASC,iBAAiB,QAASN,GAC5B,kBAAMK,SAASE,oBAAoB,QAASP,MAElD,IAEHI,qBAAU,WACR,GAAIN,EAAMJ,WAAWc,OAAQ,CAC3BT,GAAS,SAACU,GACRA,EAAMb,KAAO,aAEf,IAAMc,EAAQC,YAAW,WACvBZ,GAAS,SAACU,GACRA,EAAMZ,oBAEP,KAEH,OAAO,kBAAMe,aAAaF,IAE1BX,GAAS,SAACU,GACRA,EAAMb,KAAO,eAIhB,CAACE,EAAMJ,aAEVU,qBAAU,WACR,GAAIN,EAAMD,aAAc,CACtB,IAAMgB,EAAaC,IAAMC,YAAYC,SADf,4CAEtB,4BAAAC,EAAA,+EAE2BH,IAAMI,KAC3B,UACA,CAAExB,WAAYI,EAAMJ,YACpB,CAAEyB,YAAaN,EAAWO,QALhC,OAEUC,EAFV,OAOItB,GAAS,SAACU,GACRA,EAAMd,QAAU0B,EAASC,KACzBb,EAAMb,KAAO,aATnB,gDAYI2B,QAAQC,IAAI,qDAZhB,0DAFsB,sBAkBtB,OAlBsB,mCAiBtBC,GACO,kBAAMZ,EAAWa,aAGzB,CAAC5B,EAAMD,eAgBR,qCACE,qBAAK8B,UAAU,+BAAf,SACE,sBAAKA,UAAU,8BAAf,UACE,uBAAOC,QAAQ,oBAAoBD,UAAU,sBAA7C,SACE,cAAC,IAAD,CAAYE,MAAO,GAAIC,OAAQ,GAAIC,KAAK,mBAE1C,uBACEC,SAfV,SAAqB/B,GACnB,IAAMgC,EAAQhC,EAAEiC,OAAOD,MACvBlC,GAAS,SAACU,GACRA,EAAMf,WAAauC,MAabE,WAAS,EACThC,KAAK,OACLiC,aAAa,MACbC,GAAG,oBACHV,UAAU,oBACVW,YAAY,gCAEd,sBACEC,QAAS,kBAAMjD,EAAY,CAAEa,KAAM,iBACnCwB,UAAU,oBAFZ,SAIE,cAAC,IAAD,CAAYE,MAAO,GAAIC,OAAQ,GAAIC,KAAK,wBAK9C,qBAAKJ,UAAU,wBAAf,SACE,sBAAKA,UAAU,mCAAf,UACE,qBACEA,UACE,kBACgB,YAAf7B,EAAMF,KAAqB,yBAA2B,MAG3D,sBACE+B,UACE,wBACgB,YAAf7B,EAAMF,KAAqB,+BAAiC,IAHjE,UAMG4C,QAAQ1C,EAAMH,QAAQ8C,SACrB,sBAAKd,UAAU,uBAAf,UACE,sBAAKA,UAAU,yBAAf,UACE,oDADF,KACoC7B,EAAMH,QAAQ8C,OAAQ,IACvD3C,EAAMH,QAAQ8C,OAAS,EAAI,QAAU,OAFxC,aAIC3C,EAAMH,QAAQ+C,KAAI,SAACxB,GAClB,OACE,cAAC,IAAD,CACEA,KAAMA,EAENqB,QAAS,kBAAMjD,EAAY,CAAEa,KAAM,kBAD9Be,EAAKyB,YAOlBH,QAAQ1C,EAAMH,QAAQ8C,SACtB,mBAAGd,UAAU,2CAAb","file":"static/js/7.46526ed6.chunk.js","sourcesContent":["import axios from \"axios\";\nimport { useContext, useEffect } from \"react\";\nimport { useImmer } from \"use-immer\";\nimport DispatchContext from \"../DispatchContext\";\nimport Post from \"./Post\";\nimport { CancelIcon, SearchIcon } from \"./ui/AllSvg\";\n\nconst Search = () => {\n  const appDispatch = useContext(DispatchContext);\n\n  const [state, setState] = useImmer({\n    searchTerm: \"\",\n    results: [],\n    show: \"neither\",\n    requestCount: 0,\n  });\n\n  useEffect(() => {\n    document.addEventListener(\"keyup\", searchKeyPressHandler);\n    return () => document.removeEventListener(\"keyup\", searchKeyPressHandler);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    if (state.searchTerm.trim()) {\n      setState((draft) => {\n        draft.show = \"loading\";\n      });\n      const delay = setTimeout(() => {\n        setState((draft) => {\n          draft.requestCount++;\n        });\n      }, 750);\n\n      return () => clearTimeout(delay);\n    } else {\n      setState((draft) => {\n        draft.show = \"neither\";\n      });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [state.searchTerm]);\n\n  useEffect(() => {\n    if (state.requestCount) {\n      const ourRequest = axios.CancelToken.source();\n      async function fetchResults() {\n        try {\n          const response = await axios.post(\n            \"/search\",\n            { searchTerm: state.searchTerm },\n            { cancelToken: ourRequest.token }\n          );\n          setState((draft) => {\n            draft.results = response.data;\n            draft.show = \"results\";\n          });\n        } catch (e) {\n          console.log(\"There was a problem or the request was cancelled.\");\n        }\n      }\n      fetchResults();\n      return () => ourRequest.cancel();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [state.requestCount]);\n\n  function searchKeyPressHandler(e) {\n    if (e.keyCode === 27) {\n      appDispatch({ type: \"closeSearch\" });\n    }\n  }\n\n  function handleInput(e) {\n    const value = e.target.value;\n    setState((draft) => {\n      draft.searchTerm = value;\n    });\n  }\n\n  return (\n    <>\n      <div className=\"search-overlay-top shadow-sm\">\n        <div className=\"container container--narrow\">\n          <label htmlFor=\"live-search-field\" className=\"search-overlay-icon\">\n            <SearchIcon width={60} height={60} fill=\"currentColor\" />\n          </label>\n          <input\n            onChange={handleInput}\n            autoFocus\n            type=\"text\"\n            autoComplete=\"off\"\n            id=\"live-search-field\"\n            className=\"live-search-field\"\n            placeholder=\"What are you interested in?\"\n          />\n          <span\n            onClick={() => appDispatch({ type: \"closeSearch\" })}\n            className=\"close-live-search\"\n          >\n            <CancelIcon width={60} height={60} fill=\"currentColor\" />\n          </span>\n        </div>\n      </div>\n\n      <div className=\"search-overlay-bottom\">\n        <div className=\"container container--narrow py-3\">\n          <div\n            className={\n              \"circle-loader \" +\n              (state.show === \"loading\" ? \"circle-loader--visible\" : \"\")\n            }\n          ></div>\n          <div\n            className={\n              \"live-search-results \" +\n              (state.show === \"results\" ? \"live-search-results--visible\" : \"\")\n            }\n          >\n            {Boolean(state.results.length) && (\n              <div className=\"list-group shadow-sm\">\n                <div className=\"list-group-item active\">\n                  <strong>Search Results</strong> ({state.results.length}{\" \"}\n                  {state.results.length > 1 ? \"items\" : \"item\"} found)\n                </div>\n                {state.results.map((post) => {\n                  return (\n                    <Post\n                      post={post}\n                      key={post._id}\n                      onClick={() => appDispatch({ type: \"closeSearch\" })}\n                    />\n                  );\n                })}\n              </div>\n            )}\n            {!Boolean(state.results.length) && (\n              <p className=\"alert alert-danger text-center shadow-sm\">\n                Sorry, we could not find any results for that search.\n              </p>\n            )}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Search;\n"],"sourceRoot":""}